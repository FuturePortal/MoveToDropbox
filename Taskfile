#!/bin/bash
set -eo pipefail

# =========================================================
# Taskfile gives you a set of quick tasks for your project
# More info: https://enri.se/taskfile
# =========================================================

# =========================================================
## Project
# =========================================================

function task:init { ## Initialise the project for local development
	docker:down
	docker:build
	docker:start
	project:update
	task:help
}

function task:update { ## Update all dependencies and files
	title "Installing dependencies"
	yarn install
}

# =========================================================
## Local development
# =========================================================

function task:start { ## Start the project containers via docker compose
	docker:start
}

function task:stop { ## Stop the project containers
	docker:stop
}

function task:build { ## (re)build the project containers
	docker:build
}

function task:restart { ## Restart the project containers
	docker:stop
	docker:start
}

function task:logs { ## Show container logs
	docker:logs
}

# =========================================================
# Docker
# =========================================================

function docker:compose {
	USERID=$(id -u) GROUPID=$(id -g) docker compose "$@"
}

function docker:start {
	docker:compose up --detach
}

function docker:stop {
	title "Stopping project containers"
	docker network disconnect nawcast development-proxy || true
	docker:compose stop
}

function docker:build {
	title "Building project containers"
	docker:compose build --no-cache
}

function docker:down {
	title "Destroying project containers"
	docker:compose down --volumes
}

function docker:logs {
	title "Showing container logs"
	docker:compose logs --tail="10" --follow
}

# =========================================================
# Automation
# =========================================================

function task:pre-commit {
	title "Linting staged files"
	lint-staged
	title "Committing"
}

# =========================================================
## Taskfile
# =========================================================

PATH=./node_modules/.bin:$PATH

BLUE=$(printf '\033[36m')
YELLOW=$(printf '\033[33m')
RESET=$(printf '\033[0m')

function title {
	echo -e "\n${BLUE}=>${RESET} $1\n"
}

function banner {
	echo " "
	echo "Docker Upload To Dropbox"
}

function task:help { ## Show all available tasks
	title "Available tasks"
	awk 'BEGIN {FS = " { [#][#][ ]?"} /^([a-zA-Z_-]*:?.*)(\{ )?[#][#][ ]?/ \
		{printf "\033[33m%-34s\033[0m %s\n", $1, $2}' $0 |\
		sed -E "s/[#]{2,}[ ]*/${RESET}/g" |\
		sed -E "s/function task:*/  /g"
	echo -e "\n${BLUE}Usage:${RESET} $0 ${YELLOW}<task>${RESET} <args>"
}

function task:shorthand { ## Create CLI shorthand task instead of ./Taskfile
	title "Creating task shorthand"
	if [ -f /usr/local/bin/task ]
	then
		echo "/usr/local/bin/task already exists."
	else
		echo -e "You are about to create /usr/local/bin/task that requires root permission..."
		sudo curl --location --silent --output /usr/local/bin/task https://enri.se/taskfile-bin
		sudo chmod +x /usr/local/bin/task
	fi
	echo -e "${BLUE}You can now use:${RESET} task ${YELLOW}<task>${RESET} <args>"
}

# Execute tasks (defaults to help)
banner
"task:${@:-help}"
